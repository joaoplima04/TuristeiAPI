"""Alteração tabela place_type puxa de preferences

Revision ID: ead895cabe3d
Revises: 11916f191efb
Create Date: 2025-06-24 14:48:47.503261

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ead895cabe3d'
down_revision: Union[str, None] = '11916f191efb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Remover foreign key primeiro
    op.drop_constraint('place_type_type_id_fkey', 'place_type', type_='foreignkey')

    # Remover coluna que dependia da tabela 'type'
    op.drop_column('place_type', 'type_id')

    # Agora é seguro remover a tabela 'type'
    op.drop_index('ix_type_id', table_name='type')  # (índice primeiro, embora não obrigatório em todos os casos)
    op.drop_table('type')

    # Adicionar nova coluna e chave estrangeira para preferences
    op.add_column('place_type', sa.Column('preference_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'place_type', 'preferences', ['preference_id'], ['id'])


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('place_type', sa.Column('type_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'place_type', type_='foreignkey')
    op.create_foreign_key('place_type_type_id_fkey', 'place_type', 'type', ['type_id'], ['id'])
    op.drop_column('place_type', 'preference_id')
    op.create_table('type',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='type_pkey'),
    sa.UniqueConstraint('name', name='type_name_key')
    )
    op.create_index('ix_type_id', 'type', ['id'], unique=False)
    # ### end Alembic commands ###
