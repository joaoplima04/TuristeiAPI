"""create tables again

Revision ID: 64565273dcca
Revises: ead895cabe3d
Create Date: 2025-08-25 20:40:43.899685

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '64565273dcca'
down_revision: Union[str, None] = 'ead895cabe3d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_itemCarrinho_id', table_name='itemCarrinho')
    op.drop_table('itemCarrinho')
    op.drop_table('entrega')
    op.drop_table('aluguel')
    op.drop_table('cliente')
    op.drop_table('produto')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('produto',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('produto_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('categoria', postgresql.ENUM('PRATO_RASO', 'GUARDANAPO', 'TALHER', 'TACAS', 'TRILHOS_DE_MESA', 'SOUSPLAT', 'JOGO_AMERICANO', 'CHA_E_CAFE', 'PRATO_SOBREMESA', 'PORTA_GUARDANAPO', name='categoria'), autoincrement=False, nullable=True),
    sa.Column('preco', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('quantidade_estoque', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('imagem', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('cor', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('estilo', postgresql.ENUM('ELEGANTE', 'TROPICAL', 'FLORIDO', name='estilo'), autoincrement=False, nullable=True),
    sa.Column('publicado', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='produto_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('cliente',
    sa.Column('cpf', sa.VARCHAR(length=14), autoincrement=False, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('telefone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('data_nascimento', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('superuser', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('cpf', name='cliente_pkey'),
    sa.UniqueConstraint('email', name='cliente_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('aluguel',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('aluguel_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('cliente_cpf', sa.VARCHAR(length=11), autoincrement=False, nullable=True),
    sa.Column('data_aluguel', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('hora_inicial', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('data_devolucao', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('hora_final', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('preco_total', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('tipo_entrega', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cliente_cpf'], ['cliente.cpf'], name='aluguel_cliente_cpf_fkey'),
    sa.PrimaryKeyConstraint('id', name='aluguel_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('entrega',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('aluguel_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cep', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('endereco', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('bairro', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cidade', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('numero', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('complemento', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('nome_destinatario', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['aluguel_id'], ['aluguel.id'], name='entrega_aluguel_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='entrega_pkey')
    )
    op.create_table('itemCarrinho',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cliente_cpf', sa.VARCHAR(length=14), autoincrement=False, nullable=True),
    sa.Column('produto_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('aluguel_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('quantidade', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['aluguel_id'], ['aluguel.id'], name='itemCarrinho_aluguel_id_fkey'),
    sa.ForeignKeyConstraint(['cliente_cpf'], ['cliente.cpf'], name='itemCarrinho_cliente_cpf_fkey'),
    sa.ForeignKeyConstraint(['produto_id'], ['produto.id'], name='itemCarrinho_produto_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='itemCarrinho_pkey')
    )
    op.create_index('ix_itemCarrinho_id', 'itemCarrinho', ['id'], unique=False)
    # ### end Alembic commands ###
